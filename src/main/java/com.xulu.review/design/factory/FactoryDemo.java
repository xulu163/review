package com.xulu.review.design.factory;

/**
 * 工厂模式
 *
 * @author xulu  E-mail:java_xul@163.com
 * @version 1.0
 * @create 2019-07-22 12:14
 **/
public class FactoryDemo {

    /**
     * 1。简单工厂模式：
     * 2。工厂方法模式：把对象的实例化推迟到子类中
     * 3。抽象工厂模式：定义一个接口用于创建相关或有依赖关系的对象组，而无需指名具体类
     */


    /**
     * 工厂模式的意义：
     *   将实例化对象的代码提取出来，放到一个类中统一管理和维护，达到和主项目的依赖关系的解耦。
     *
     * 设计模式的依赖抽象原则：
     *   1）创建对象实例时，不要直接new类，而是把这个new类的动作放在一个工厂的方法中，并返回，
     *   2）不要让类继承具体类，而是继承抽象类或者是实现interface，
     *   3）不要覆盖基类中已经实现的方法。
     */
}
